// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Executions.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using System;
using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;

namespace Microsoft.Azure.Functions.Messages {

    /// <summary>Holder for reflection information generated from Executions.proto</summary>
    [CLSCompliant(false)]
    public static partial class ExecutionsReflection {

    #region Descriptor
    /// <summary>File descriptor for Executions.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1810:InitializeReferenceTypeStaticFieldsInline")]
        static ExecutionsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBFeGVjdXRpb25zLnByb3RvEiJtaWNyb3NvZnQuYXp1cmUuZnVuY3Rpb25z",
            "Lm1lc3NhZ2VzItMCChFGdW5jdGlvbkV4ZWN1dGlvbhIVCg1mdW5jdGlvbl9u",
            "YW1lGAEgASgJEhUKDWludm9jYXRpb25faWQYAiABKAkSDwoHaG9zdF9pZBgD",
            "IAEoCRJPCgVpbnB1dBgPIAMoCzJALm1pY3Jvc29mdC5henVyZS5mdW5jdGlv",
            "bnMubWVzc2FnZXMuRnVuY3Rpb25FeGVjdXRpb24uSW5wdXRFbnRyeRJRCgZv",
            "dXRwdXQYECADKAsyQS5taWNyb3NvZnQuYXp1cmUuZnVuY3Rpb25zLm1lc3Nh",
            "Z2VzLkZ1bmN0aW9uRXhlY3V0aW9uLk91dHB1dEVudHJ5GiwKCklucHV0RW50",
            "cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgMOgI4ARotCgtPdXRwdXRF",
            "bnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAw6AjgBYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.Azure.Functions.Messages.FunctionExecution), global::Microsoft.Azure.Functions.Messages.FunctionExecution.Parser, new[]{ "FunctionName", "InvocationId", "HostId", "Input", "Output" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
    #region Messages
    [CLSCompliant(false)]
    public sealed partial class FunctionExecution : pb::IMessage<FunctionExecution> {
    private static readonly pb::MessageParser<FunctionExecution> _parser = new pb::MessageParser<FunctionExecution>(() => new FunctionExecution());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FunctionExecution> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.Azure.Functions.Messages.ExecutionsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FunctionExecution() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FunctionExecution(FunctionExecution other) : this() {
      functionName_ = other.functionName_;
      invocationId_ = other.invocationId_;
      hostId_ = other.hostId_;
      input_ = other.input_.Clone();
      output_ = other.output_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FunctionExecution Clone() {
      return new FunctionExecution(this);
    }

    /// <summary>Field number for the "function_name" field.</summary>
    public const int FunctionNameFieldNumber = 1;
    private string functionName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FunctionName {
      get { return functionName_; }
      set {
        functionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "invocation_id" field.</summary>
    public const int InvocationIdFieldNumber = 2;
    private string invocationId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InvocationId {
      get { return invocationId_; }
      set {
        invocationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "host_id" field.</summary>
    public const int HostIdFieldNumber = 3;
    private string hostId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HostId {
      get { return hostId_; }
      set {
        hostId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 15;
    private static readonly pbc::MapField<string, pb::ByteString>.Codec _map_input_codec
        = new pbc::MapField<string, pb::ByteString>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForBytes(18), 122);
    private readonly pbc::MapField<string, pb::ByteString> input_ = new pbc::MapField<string, pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, pb::ByteString> Input {
      get { return input_; }
    }

    /// <summary>Field number for the "output" field.</summary>
    public const int OutputFieldNumber = 16;
    private static readonly pbc::MapField<string, pb::ByteString>.Codec _map_output_codec
        = new pbc::MapField<string, pb::ByteString>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForBytes(18), 130);
    private readonly pbc::MapField<string, pb::ByteString> output_ = new pbc::MapField<string, pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, pb::ByteString> Output {
      get { return output_; }
    }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration", MessageId = "0#")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FunctionExecution);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FunctionExecution other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FunctionName != other.FunctionName) return false;
      if (InvocationId != other.InvocationId) return false;
      if (HostId != other.HostId) return false;
      if (!Input.Equals(other.Input)) return false;
      if (!Output.Equals(other.Output)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FunctionName.Length != 0) hash ^= FunctionName.GetHashCode();
      if (InvocationId.Length != 0) hash ^= InvocationId.GetHashCode();
      if (HostId.Length != 0) hash ^= HostId.GetHashCode();
      hash ^= Input.GetHashCode();
      hash ^= Output.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FunctionName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FunctionName);
      }
      if (InvocationId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InvocationId);
      }
      if (HostId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(HostId);
      }
      input_.WriteTo(output, _map_input_codec);
      output_.WriteTo(output, _map_output_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FunctionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FunctionName);
      }
      if (InvocationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InvocationId);
      }
      if (HostId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HostId);
      }
      size += input_.CalculateSize(_map_input_codec);
      size += output_.CalculateSize(_map_output_codec);
      return size;
    }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration", MessageId = "0#")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FunctionExecution other) {
      if (other == null) {
        return;
      }
      if (other.FunctionName.Length != 0) {
        FunctionName = other.FunctionName;
      }
      if (other.InvocationId.Length != 0) {
        InvocationId = other.InvocationId;
      }
      if (other.HostId.Length != 0) {
        HostId = other.HostId;
      }
      input_.Add(other.input_);
      output_.Add(other.output_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            FunctionName = input.ReadString();
            break;
          }
          case 18: {
            InvocationId = input.ReadString();
            break;
          }
          case 26: {
            HostId = input.ReadString();
            break;
          }
          case 122: {
            input_.AddEntriesFrom(input, _map_input_codec);
            break;
          }
          case 130: {
            output_.AddEntriesFrom(input, _map_output_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
